<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="hibernate-hbms.xml" />
    <import resource="spring-hibernate.xml" />

	<bean
		id="org.sakaiproject.contentreview.service.ContentReviewService"
		class="org.sakaiproject.contentreview.impl.ContentReviewFederatedServiceImpl"
		init-method="init">
		<property name="providers">
			<list>
				<!--ref bean="org.sakaiproject.contentreview.service.ContentReviewServiceTii"/>
	            		<ref bean="org.sakaiproject.contentreview.service.ContentReviewServiceVeriCite"/>
					-->
			</list>
		</property>

		<property name="siteService" ref="org.sakaiproject.site.api.SiteService"/>
		<property name="toolManager" ref="org.sakaiproject.tool.api.ToolManager"/>
		<property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />

	</bean>
	
	<bean id="ContentReviewQueue"
		class="org.sakaiproject.contentreview.jobs.ContentReviewQueue">
		<property name="contentReviewService">
			<ref
				bean="org.sakaiproject.contentreview.service.ContentReviewServiceTii" />
		</property>
		<property name="sessionManager">
			<ref bean="org.sakaiproject.tool.api.SessionManager" />
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerContentReviewQueue"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringStatefulJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>ContentReviewQueue</value>
		</property>
		<property name="jobName">
			<value>Process Content Review Queue</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>

	<bean id="ContentReviewReports"
		class="org.sakaiproject.contentreview.jobs.ContentReviewReports">
		<property name="contentReviewService">
			<ref
				bean="org.sakaiproject.contentreview.service.ContentReviewServiceTii" />
		</property>
	</bean>

	<bean
		id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerContentReviewReports"
		class="org.sakaiproject.component.app.scheduler.jobs.SpringStatefulJobBeanWrapper"
		singleton="true" init-method="init">
		<property name="beanId">
			<value>ContentReviewReports</value>
		</property>
		<property name="jobName">
			<value>Process Content Review Reports</value>
		</property>
		<property name="schedulerManager">
			<ref
				bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
		</property>
	</bean>
	
	
	
	<!-- VeriCite
	<bean
		id="org.sakaiproject.contentreview.service.ContentReviewServiceVeriCite"
		class="org.sakaiproject.contentreview.impl.ContentReviewServiceImpl"
		init-method="init">
		 <property name="serverConfigurationService" ref="org.sakaiproject.component.api.ServerConfigurationService" />
		 <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
		 <property name="entityManager" ref="org.sakaiproject.entity.api.EntityManager" />
		 <property name="securityService" ref="org.sakaiproject.authz.api.SecurityService"/>
	</bean>
	End VeriCite -->
	
	<!--  TurnItIn
	<bean id="org.sakaiproject.contentreview.impl.turnitin.TurnitinContentValidator"
		class="org.sakaiproject.contentreview.impl.turnitin.TurnitinContentValidator"
		init-method="init">
		<property name="serverConfigurationService"
			ref="org.sakaiproject.component.api.ServerConfigurationService" />
	</bean>

	<bean
		id="org.sakaiproject.contentreview.service.ContentReviewServiceTii"
		class="org.sakaiproject.contentreview.impl.turnitin.TurnitinReviewServiceImpl"
		init-method="init">
		<property name="dao"
			ref="org.sakaiproject.contentreview.dao.ContentReviewDao" />
		<property name="toolManager"
			ref="org.sakaiproject.tool.api.ToolManager" />
		<property name="userDirectoryService"
			ref="org.sakaiproject.user.api.UserDirectoryService" />
		<property name="contentHostingService"
			ref="org.sakaiproject.content.api.ContentHostingService" />
		<property name="serverConfigurationService"
			ref="org.sakaiproject.component.api.ServerConfigurationService" />
		<property name="entityManager"
			ref="org.sakaiproject.entity.api.EntityManager" />
		<property name="sakaiPersonManager"
			ref="org.sakaiproject.api.common.edu.person.SakaiPersonManager" />
		<property name="sqlService"
			ref="org.sakaiproject.db.api.SqlService" />
		<property name="turnitinContentValidator"
			ref="org.sakaiproject.contentreview.impl.turnitin.TurnitinContentValidator" />
		<property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
		<property name="turnitinConn" ref="org.sakaiproject.contentreview.impl.turnitin.TurnitinAccountConnection" />
	</bean>

	<bean id="TiiContentReviewRosterSync"
        class="org.sakaiproject.component.app.scheduler.jobs.ContentReviewTurnitinRosterSync">
        <property name="turnitinRosterSync">
            <ref
                bean="org.sakaiproject.contentreview.impl.turnitin.TurnitinRosterSync" />
        </property>
    </bean>

    <bean
        id="org.sakaiproject.api.app.scheduler.JobBeanWrapper.schedulerContentReviewRosterSync"
        class="org.sakaiproject.component.app.scheduler.jobs.SpringStatefulJobBeanWrapper"
        singleton="true" init-method="init">
        <property name="beanId">
            <value>TiiContentReviewRosterSync</value>
        </property>
        <property name="jobName">
            <value>Process Turnitin Content Review Roster Sync</value>
        </property>
        <property name="schedulerManager">
            <ref
                bean="org.sakaiproject.api.app.scheduler.SchedulerManager" />
        </property>
    </bean>

<bean class="org.sakaiproject.contentreview.impl.turnitin.TurnitinRosterSync"
    id="org.sakaiproject.contentreview.impl.turnitin.TurnitinRosterSync"
    init-method="init">
    <property name="turnitinReviewServiceImpl" ref="org.sakaiproject.contentreview.service.ContentReviewServiceTii" />
    <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
    <property name="userDirectoryService" ref="org.sakaiproject.user.api.UserDirectoryService" />
    <property name="turnitinConn" ref="org.sakaiproject.contentreview.impl.turnitin.TurnitinAccountConnection" />
    <property name="dao" ref="org.sakaiproject.contentreview.dao.ContentReviewDao" />
    <property name="serverConfigurationService"
            ref="org.sakaiproject.component.api.ServerConfigurationService" />
</bean>

  <bean class="org.sakaiproject.contentreview.impl.turnitin.TurnitinMigrateSRC"
      id="org.sakaiproject.contentreview.impl.turnitin.TurnitinMigrateSRC"
      init-method="init">
      <property name="turnitinConn" ref="org.sakaiproject.contentreview.impl.turnitin.TurnitinAccountConnection" />
  </bean>

  <bean id="org.sakaiproject.contentreview.impl.turnitin.MembershipChangeObserver"
    class="org.sakaiproject.contentreview.impl.turnitin.MembershipChangeObserver"
    init-method="init">
    <property name="eventTrackingService" ref="org.sakaiproject.event.api.EventTrackingService" />
    <property name="turnitinRosterSync" ref="org.sakaiproject.contentreview.impl.turnitin.TurnitinRosterSync" />
    <property name="dao" ref="org.sakaiproject.contentreview.dao.ContentReviewDao" />
    <property name="siteService" ref="org.sakaiproject.site.api.SiteService" />
    <property name="contentReviewService" ref="org.sakaiproject.contentreview.service.ContentReviewServiceTii" />
   </bean>

   <bean id="org.sakaiproject.contentreview.impl.turnitin.TurnitinAccountConnection"
    class="org.sakaiproject.contentreview.impl.turnitin.TurnitinAccountConnection"
    init-method="init">
        <property name="serverConfigurationService"
            ref="org.sakaiproject.component.api.ServerConfigurationService" />
   </bean>
	
		<!--  Uncomment this to allow all sites to use Turnitin regardless of site type or property -->
	<!--
	<bean
		id="org.sakaiproject.contentreview.service.ContentReviewSiteAdvisor"
		class="org.sakaiproject.contentreview.impl.adivisors.DefaultSiteAdvisor">
	</bean>
	-->

	<!--  Uncomment this to use a site property to define which sites use c-r -->
	<!--
		<bean id="org.sakaiproject.contentreview.service.ContentReviewSiteAdvisor" class="org.sakaiproject.contentreview.impl.adivisors.SitePropertyAdvisor">
		<property name="siteProperty"><value>useContentReviewService</value></property>
		</bean>
	-->
	<!-- uncomment this bean to make cr available to only sites of the type course -->
	<!--
		<bean id="org.sakaiproject.contentreview.service.ContentReviewSiteAdvisor" class="org.sakaiproject.contentreview.impl.adivisors.SiteCourseTypeAdvisor">
		</bean>
	-->
	
	
	<!-- End TurnItIn -->
</beans>
